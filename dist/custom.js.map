{"version":3,"sources":["custom.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","$","document","ready","getCountries","_getCountries","regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","log","stop","_renderCountries","_callee2","Countries","template","neighborsName","CurrentCountry","gettingNews","_context2","newsdata","totalResults","newsSection","NewsSegment","articles","forEach","article","urlToImage","concat","url","title","source","name","publishedAt","querySelector","innerHTML","myCountry","html","flag","capital","population","subregion","timezones","borders","cardBorders","alphaCode","countryName","i","length","alpha3Code","j","country","index","owlCarousel","items","dots","margin","responsive","0","600","768","900","1200","click","id","alpha2Code","response","renderCountries"],"mappings":"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","file":"custom.js","sourcesContent":["$(document).ready(function () {\r\n\r\n  // ================================= Carousel fetching =====================================================\r\n  async function getCountries() {\r\n    let url = 'https://restcountries.eu/rest/v2/';\r\n    try {\r\n      let res = await fetch(url);\r\n      return await res.json();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function renderCountries() {\r\n    let Countries = await getCountries();\r\n    let template = '';\r\n    Countries.forEach((country, index) => {\r\n\r\n      template += `\r\n      <div class=\"item\">\r\n       <div class=\"card\" id=\"${index}\">\r\n          <img src=\"${country.flag}\" class=\"card-img-top\" alt=\"Country Flag\">\r\n          <div class=\"card-body\">\r\n              <h5 class=\"card-title\">${country.name}</h5>\r\n              <p class=\"card-text\">${country.capital}</p>\r\n          </div>\r\n       </div>\r\n      </div>\r\n    `\r\n    });\r\n    $('.owl-carousel').html(template);\r\n\r\n    $(\".owl-carousel\").owlCarousel({\r\n      items: 4,\r\n      dots: false,\r\n      margin:10,\r\n      responsive: {\r\n        0: {\r\n          items: 1\r\n        },\r\n        600: {\r\n          items: 1\r\n        },\r\n        768: {\r\n          items: 2\r\n        },\r\n        900: {\r\n          items: 3\r\n        },\r\n        1200: {\r\n          items: 4\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n\r\n    // =============================Current Country Section=====================================================\r\n\r\n    // ========= converting the neighbors alphaCode of each country to its full name =========\r\n\r\n\r\n    function neighborsName(cardBorders) {\r\n      var alphaCode = [];\r\n      var countryName = [];\r\n\r\n      for (let i = 0; i < Countries.length; i++) {\r\n\r\n        alphaCode[i] = Countries[i].alpha3Code;\r\n        countryName[i] = Countries[i].name;\r\n\r\n      }\r\n\r\n      if (cardBorders.length == 0) {\r\n\r\n        cardBorders[0] = 'No Neighbors Available';\r\n\r\n      } else {\r\n        for (let i = 0; i < cardBorders.length; i++) {\r\n\r\n          for (let j = 0; j < alphaCode.length; j++) {\r\n            if (alphaCode[j] == cardBorders[i]) {\r\n\r\n              cardBorders[i] = countryName[j];\r\n\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // ============================== End Of the function ================================\r\n\r\n\r\n\r\n    // ========= Binding card details of the selected country ============================\r\n\r\n\r\n    function CurrentCountry(myCountry) {\r\n      let html = '';\r\n      let htmlSegment =\r\n        `\r\n         <div class=\"card mb-3 col-12 col-lg-4 mt-5 text-white\">\r\n           <div class=\"row g-0\">\r\n             <div class=\"col-md-10 col-lg-4 mt-4 me-3 mx-md-auto mx-lg-0\">\r\n                 <img src=\"${myCountry.flag}\" class=\"img-fluid rounded-start\" alt=\"Country Flag\">\r\n             </div>\r\n             <div class=\"col-md-12 col-lg-6\">\r\n                 <div class=\"card-body text-center text-lg-start\">\r\n                     <h5 class=\"card-title fw-bold country name\"> ${myCountry.name}</h5>\r\n                     <p class=\"card-text capital\">Capital: ${myCountry.capital} </p>\r\n                     <p class=\"card-text capital\">Currency: ${myCountry['currencies'][0]['name']}</p>\r\n                     <p class=\"card-text capital\">Language: ${myCountry['languages'][0]['name']} </p>\r\n                     <p class=\"card-text capital\">Population: ${myCountry.population} </p>\r\n                     <p class=\"card-text capital\">Subregion: ${myCountry.subregion} </p>\r\n                     <p class=\"card-text capital\">Timezone: ${myCountry.timezones} </p>\r\n                     <h5 class=\"card-text Neighbors\">Neighbors: ${myCountry.borders}</h5>\r\n                </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n        `;\r\n\r\n      html += htmlSegment;\r\n\r\n      let selectedCountry = document.querySelector('.current-country .container');\r\n      selectedCountry.innerHTML = html;\r\n\r\n    }\r\n\r\n\r\n    // ========= End of Binding card details of the selected country ============================\r\n\r\n    // ========= start of Binding List of News of the selected country ============================\r\n\r\n\r\n    function gettingNews(newsdata) {\r\n\r\n      if (newsdata.totalResults != 0) {\r\n        let newsSection = '';\r\n        let NewsSegment = ''\r\n\r\n\r\n        newsdata.articles.forEach((article) => {\r\n\r\n          if (article.urlToImage == null) {\r\n            article.urlToImage = '/assets/images/no-image.jpg'\r\n\r\n          }\r\n\r\n          NewsSegment = `\r\n      <div class=\"card text-white mb-3\">\r\n      <div class=\"row g-0\">\r\n          <div class=\"col-md-12 col-lg-4\">\r\n              <div class=\"bgImg\" style=\"background-image: url('${article.urlToImage}') ;\"></div>\r\n          </div>\r\n          <div class=\"col-md-12 col-lg-8\">\r\n              <div class=\"card-body\">\r\n                  <h5 class=\"card-title country name\"><a href=\"${article.url}\">${article.title}</a></h5>\r\n                  <p class=\"card-text capital\">${article.title}</p>\r\n                  <h5 class=\"card-text Neighbors text-end\">${article.source.name}<span>${article.publishedAt}</span></h5>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>`;\r\n\r\n          newsSection += NewsSegment;\r\n\r\n        });\r\n        let listOfNews = document.querySelector('.list-of-news');\r\n        listOfNews.innerHTML = newsSection;\r\n\r\n      } else {\r\n        NewsSegment = `\r\n    <h2 class=\"text-white text-center mt-4 mb-4\">No Current News</h2>\r\n    `;\r\n        let listOfNews = document.querySelector('.list-of-news');\r\n        listOfNews.innerHTML = NewsSegment;\r\n      }\r\n\r\n    }\r\n\r\n    // ========= End of Binding List of News of the selected country ============================\r\n\r\n\r\n    // ==============================onClick function=====================================\r\n\r\n    var card = $('.countries .container .owl-carousel .item .card');\r\n\r\n    card.click(function renderCountry() {\r\n\r\n      neighborsName(Countries[this.id].borders);\r\n\r\n\r\n      CurrentCountry(Countries[this.id]);\r\n\r\n\r\n      const recievedNews = (newsdata) => {\r\n\r\n        gettingNews(newsdata);\r\n\r\n      }\r\n\r\n      let apikey = 'f364bb873491438b8050bf9566fc04bf';\r\n      let url = `https://newsapi.org/v2/top-headlines?country=${Countries[this.id].alpha2Code}&apiKey=${apikey}`;\r\n\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(recievedNews)\r\n\r\n    });\r\n\r\n  }\r\n\r\n  renderCountries();\r\n\r\n})"]}